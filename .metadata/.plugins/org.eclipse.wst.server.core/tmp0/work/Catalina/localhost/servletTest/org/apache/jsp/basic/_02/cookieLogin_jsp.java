/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.107
 * Generated at: 2021-02-15 05:28:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.basic._02;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cookieLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>cookie연습용 Login폼</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- \r\n");
      out.write("\t체크박스가 체크된 상태로 로그인 하면 쿠키에 로그인할 때 사용한 'id'를\r\n");
      out.write("\t저장한다. (쿠키변수 : userId)\r\n");
      out.write(" -->\r\n");
      out.write(" \r\n");
      out.write(" ");

 	// 쿠키에 저장된 userId 정보 가져오기
 	String cookieUserId = ""; // id값 저장할 변수
 	String chk = ""; // 체크박스의 체크여부를 나타내는 'checked'속성값을 저장할 변수
 	Cookie[] cookies = request.getCookies();
 	
 	if(cookies != null && cookies.length > 0 ){
 		for(int i = 0; i < cookies.length; i++){
 			if(cookies[i].getName().equals("userId")){ // 원하는 쿠키변수가 있는지 검사
 				cookieUserId = cookies[i].getValue(); // 쿠키값(사용자ID) 쿠키값
 				chk = "checked";
 				
 			}
 		}
 	}
 
      out.write("\r\n");
      out.write(" <form method=\"post\" action=\"");
      out.print(request.getContextPath());
      out.write("/cookieLoginServlet.do\">\r\n");
      out.write(" \t<table>\r\n");
      out.write(" \t\t<tr>\r\n");
      out.write(" \t\t\t<td>ID : </td>\r\n");
      out.write(" \t\t\t<td><input name=\"userid\" value=\"");
      out.print(cookieUserId );
      out.write("\" type=\"text\" placeholder=\"ID를 입력하세요\"></td>\r\n");
      out.write(" \t\t</tr>\r\n");
      out.write(" \t\t<tr>\r\n");
      out.write(" \t\t\t<td>PASS : </td>\r\n");
      out.write(" \t\t\t<td><input name=\"pass\" type=\"password\" placeholder=\"PassWord를 입력하세요.\"></td>\r\n");
      out.write(" \t\t</tr>\r\n");
      out.write(" \t\t<tr>\r\n");
      out.write(" \t\t\t<td colspan=\"2\"><input type=\"checkbox\" name=\"chkid\" value=\"check\" ");
      out.print(chk);
      out.write(">ID 기억하기</td>\r\n");
      out.write(" \t\t</tr>\r\n");
      out.write(" \t\t<tr>\r\n");
      out.write(" \t\t\t<td colspan=\"2\" style=\"text-align: center;\"><input type=\"submit\" value=\"Login\"></td>\r\n");
      out.write(" \t\t</tr>\r\n");
      out.write(" \t</table>\r\n");
      out.write(" </form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
